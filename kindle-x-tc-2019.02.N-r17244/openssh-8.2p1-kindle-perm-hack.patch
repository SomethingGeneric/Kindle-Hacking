diff --git a/auth-rhosts.c b/auth-rhosts.c
index 7a10210b..34369996 100644
--- a/auth-rhosts.c
+++ b/auth-rhosts.c
@@ -260,12 +260,11 @@ auth_rhosts2(struct passwd *pw, const char *client_user, const char *hostname,
 		return 0;
 	}
 	if (options.strict_modes &&
-	    ((st.st_uid != 0 && st.st_uid != pw->pw_uid) ||
-	    (st.st_mode & 022) != 0)) {
+	    (st.st_uid != 0 && st.st_uid != pw->pw_uid)) {
 		logit("Rhosts authentication refused for %.100s: "
-		    "bad ownership or modes for home directory.", pw->pw_name);
+		    "bad ownership for home directory.", pw->pw_name);
 		auth_debug_add("Rhosts authentication refused for %.100s: "
-		    "bad ownership or modes for home directory.", pw->pw_name);
+		    "bad ownership for home directory.", pw->pw_name);
 		return 0;
 	}
 	/* Temporarily use the user's uid. */
@@ -287,11 +286,10 @@ auth_rhosts2(struct passwd *pw, const char *client_user, const char *hostname,
 		 * allowing access to their account by anyone.
 		 */
 		if (options.strict_modes &&
-		    ((st.st_uid != 0 && st.st_uid != pw->pw_uid) ||
-		    (st.st_mode & 022) != 0)) {
-			logit("Rhosts authentication refused for %.100s: bad modes for %.200s",
+		    (st.st_uid != 0 && st.st_uid != pw->pw_uid)) {
+			logit("Rhosts authentication refused for %.100s: bad ownership for %.200s",
 			    pw->pw_name, buf);
-			auth_debug_add("Bad file modes for %.200s", buf);
+			auth_debug_add("Bad file ownership for %.200s", buf);
 			continue;
 		}
 		/*
diff --git a/misc.c b/misc.c
index 3a31d5c1..25adf5f6 100644
--- a/misc.c
+++ b/misc.c
@@ -1909,9 +1909,8 @@ safe_path(const char *name, struct stat *stp, const char *pw_dir,
 		snprintf(err, errlen, "%s is not a regular file", buf);
 		return -1;
 	}
-	if ((!platform_sys_dir_uid(stp->st_uid) && stp->st_uid != uid) ||
-	    (stp->st_mode & 022) != 0) {
-		snprintf(err, errlen, "bad ownership or modes for file %s",
+	if (!platform_sys_dir_uid(stp->st_uid) && stp->st_uid != uid) {
+		snprintf(err, errlen, "bad ownership for file %s",
 		    buf);
 		return -1;
 	}
@@ -1925,10 +1924,9 @@ safe_path(const char *name, struct stat *stp, const char *pw_dir,
 		strlcpy(buf, cp, sizeof(buf));
 
 		if (stat(buf, &st) == -1 ||
-		    (!platform_sys_dir_uid(st.st_uid) && st.st_uid != uid) ||
-		    (st.st_mode & 022) != 0) {
+		    (!platform_sys_dir_uid(st.st_uid) && st.st_uid != uid)) {
 			snprintf(err, errlen,
-			    "bad ownership or modes for directory %s", buf);
+			    "bad ownership for directory %s", buf);
 			return -1;
 		}
 
diff --git a/readconf.c b/readconf.c
index adfd7a4e..847ece40 100644
--- a/readconf.c
+++ b/readconf.c
@@ -1856,8 +1856,7 @@ read_config_file_depth(const char *filename, struct passwd *pw,
 
 		if (fstat(fileno(f), &sb) == -1)
 			fatal("fstat %s: %s", filename, strerror(errno));
-		if (((sb.st_uid != 0 && sb.st_uid != getuid()) ||
-		    (sb.st_mode & 022) != 0))
+		if (sb.st_uid != 0 && sb.st_uid != getuid())
 			fatal("Bad owner or permissions on %s", filename);
 	}
 
diff --git a/session.c b/session.c
index 8c0e54f7..564550ac 100644
--- a/session.c
+++ b/session.c
@@ -1337,7 +1337,7 @@ safely_chroot(const char *path, uid_t uid)
 		if (stat(component, &st) != 0)
 			fatal("%s: stat(\"%s\"): %s", __func__,
 			    component, strerror(errno));
-		if (st.st_uid != 0 || (st.st_mode & 022) != 0)
+		if (st.st_uid != 0)
 			fatal("bad ownership or modes for chroot "
 			    "directory %s\"%s\"",
 			    cp == NULL ? "" : "component ", component);
diff --git a/sshd.c b/sshd.c
index 60b2aaf7..f2aa2a03 100644
--- a/sshd.c
+++ b/sshd.c
@@ -1910,10 +1910,9 @@ main(int ac, char **av)
 
 #ifdef HAVE_CYGWIN
 		if (check_ntsec(_PATH_PRIVSEP_CHROOT_DIR) &&
-		    (st.st_uid != getuid () ||
-		    (st.st_mode & (S_IWGRP|S_IWOTH)) != 0))
+		    st.st_uid != getuid ())
 #else
-		if (st.st_uid != 0 || (st.st_mode & (S_IWGRP|S_IWOTH)) != 0)
+		if (st.st_uid != 0)
 #endif
 			fatal("%s must be owned by root and not group or "
 			    "world-writable.", _PATH_PRIVSEP_CHROOT_DIR);
